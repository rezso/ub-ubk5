diff -Naur a/src/AV/Output/AudioEncoder.cpp b/src/AV/Output/AudioEncoder.cpp
--- a/src/AV/Output/AudioEncoder.cpp	2025-01-06 23:42:39.754241080 +0100
+++ b/src/AV/Output/AudioEncoder.cpp	2025-01-06 23:48:30.315234904 +0100
@@ -42,7 +42,7 @@
 	if(GetCodecContext()->frame_size <= 1) {
 		// This is really weird, the old API uses the size of the *output* buffer to determine the number of
 		// input samples if the number of input samples (i.e. frame_size) is not fixed (i.e. frame_size <= 1).
-		m_temp_buffer.resize(DEFAULT_FRAME_SAMPLES * GetCodecContext()->channels * av_get_bits_per_sample(GetCodecContext()->codec_id) / 8);
+		m_temp_buffer.resize(DEFAULT_FRAME_SAMPLES * GetChannels() * av_get_bits_per_sample(GetCodecContext()->codec_id) / 8);
 	} else {
 		m_temp_buffer.resize(std::max(FF_MIN_BUFFER_SIZE, 256 * 1024));
 	}
@@ -69,7 +69,11 @@
 }
 
 unsigned int AudioEncoder::GetChannels() {
+#if SSR_USE_AV_CHANNEL_LAYOUT
+	return GetCodecContext()->ch_layout.nb_channels;
+#else
 	return GetCodecContext()->channels;
+#endif
 }
 
 unsigned int AudioEncoder::GetSampleRate() {
@@ -106,8 +110,12 @@
 	}
 
 	codec_context->bit_rate = bit_rate;
+#if SSR_USE_AV_CHANNEL_LAYOUT
+	av_channel_layout_default(&codec_context->ch_layout, channels);
+#else
 	codec_context->channels = channels;
 	codec_context->channel_layout = (channels == 1)? AV_CH_LAYOUT_MONO : AV_CH_LAYOUT_STEREO;
+#endif
 	codec_context->sample_rate = sample_rate;
 	codec_context->time_base.num = 1;
 	codec_context->time_base.den = sample_rate;
@@ -157,7 +165,11 @@
 		assert((unsigned int) frame->GetFrame()->nb_samples == GetFrameSize());
 #endif
 #if SSR_USE_AVFRAME_CHANNELS
-		assert(frame->GetFrame()->channels == GetCodecContext()->channels);
+#if SSR_USE_AV_CHANNEL_LAYOUT
+	assert(frame->GetFrame()->ch_layout.nb_channels == GetCodecContext()->ch_layout.nb_channels);
+#else
+	assert(frame->GetFrame()->channels == GetCodecContext()->channels);
+#endif
 #endif
 #if SSR_USE_AVFRAME_SAMPLE_RATE
 		assert(frame->GetFrame()->sample_rate == GetCodecContext()->sample_rate);
diff -Naur a/src/AV/Output/Synchronizer.cpp b/src/AV/Output/Synchronizer.cpp
--- a/src/AV/Output/Synchronizer.cpp	2021-05-24 20:56:32.000000000 +0200
+++ b/src/AV/Output/Synchronizer.cpp	2025-01-06 23:52:24.719877920 +0100
@@ -27,6 +27,7 @@
 #include "AudioEncoder.h"
 #include "SampleCast.h"
 #include "SyncDiagram.h"
+#include <libavutil/channel_layout.h>
 
 // The amount of filtering applied to audio timestamps to reduce noise. Higher values reduce timestamp noise (and associated drift correction),
 // but if the value is too high, it will take more time to detect gaps.
@@ -180,8 +181,12 @@
 	frame->GetFrame()->nb_samples = samples;
 #endif
 #if SSR_USE_AVFRAME_CHANNELS
+#if SSR_USE_AV_CHANNEL_LAYOUT
+	av_channel_layout_default(&frame->GetFrame()->ch_layout, channels);
+#else
 	frame->GetFrame()->channels = channels;
 #endif
+#endif
 #if SSR_USE_AVFRAME_SAMPLE_RATE
 	frame->GetFrame()->sample_rate = sample_rate;
 #endif
diff -Naur a/src/Global.h b/src/Global.h
--- a/src/Global.h	2021-05-24 20:56:32.000000000 +0200
+++ b/src/Global.h	2025-01-06 23:48:30.319234915 +0100
@@ -257,6 +257,8 @@
 // avformat_free_context: lavf 52.96.0 / 52.96.0
 #define SSR_USE_AVFORMAT_FREE_CONTEXT              TEST_AV_VERSION(LIBAVFORMAT, 52, 96, 52, 96)
 
+// AVChannelLayout, ch_layout: lavc 59.24.100 / ???
+#define SSR_USE_AV_CHANNEL_LAYOUT                  TEST_AV_VERSION(LIBAVCODEC, 59, 24, 999, 999)
 // av_codec_iterate: lavc 58.10.100 / ???
 #define SSR_USE_AV_CODEC_ITERATE                   TEST_AV_VERSION(LIBAVCODEC, 58, 10, 999, 999)
 // av_lockmgr_register deprecated: lavc 58.9.100 / ???
