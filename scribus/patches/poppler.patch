diff -Naur a/scribus/plugins/import/pdf/importpdfconfig.h b/scribus/plugins/import/pdf/importpdfconfig.h
--- a/scribus/plugins/import/pdf/importpdfconfig.h	2025-01-08 00:06:55.000000000 +0100
+++ b/scribus/plugins/import/pdf/importpdfconfig.h	2025-02-28 12:36:04.553116689 +0100
@@ -15,16 +15,10 @@
 	+ ((micro) *     1))
 #define POPPLER_ENCODED_VERSION POPPLER_VERSION_ENCODE(POPPLER_VERSION_MAJOR, POPPLER_VERSION_MINOR, POPPLER_VERSION_MICRO)
 
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(0, 82, 0)
-#define POPPLER_CONST_082 const
+#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(25, 2, 0)
+#define POPPLER_CONST_25_02 const
 #else
-#define POPPLER_CONST_082
-#endif
-
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(0, 83, 0)
-#define POPPLER_CONST_083 const
-#else
-#define POPPLER_CONST_083
+#define POPPLER_CONST_25_02
 #endif
 
 #endif
diff -Naur a/scribus/plugins/import/pdf/importpdf.cpp b/scribus/plugins/import/pdf/importpdf.cpp
--- a/scribus/plugins/import/pdf/importpdf.cpp	2025-01-08 00:06:55.000000000 +0100
+++ b/scribus/plugins/import/pdf/importpdf.cpp	2025-02-28 12:36:04.553116689 +0100
@@ -16,7 +16,6 @@
 #include <QInputDialog>
 #include <QList>
 #include <QMimeData>
-#include <QRegExp>
 #include <QStack>
 
 #include <poppler/ErrorCodes.h>
@@ -36,34 +35,19 @@
 
 #include "commonstrings.h"
 #include "loadsaveplugin.h"
-#include "pagesize.h"
 #include "pdfimportoptions.h"
 #include "pdfoptions.h"
-#include "prefscontext.h"
-#include "prefsfile.h"
 #include "prefsmanager.h"
-#include "prefstable.h"
-#include "rawimage.h"
-#include "scclocale.h"
-#include "sccolorengine.h"
 #include "scconfig.h"
 #include "scmimedata.h"
-#include "scpaths.h"
 #include "scribus.h"
 #include "scribusXml.h"
 #include "scribuscore.h"
-#include "sctextstream.h"
 #include "selection.h"
 #include "undomanager.h"
 #include "util.h"
-#include "util_formats.h"
-#include "util_math.h"
 #include "util_os.h"
-
-#include "ui/customfdialog.h"
-#include "ui/missing.h"
 #include "ui/multiprogressdialog.h"
-#include "ui/propertiespalette.h"
 
 PdfPlug::PdfPlug(ScribusDoc* doc, int flags)
 {
@@ -76,23 +60,13 @@
 
 QImage PdfPlug::readThumbnail(const QString& fName)
 {
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(0, 83, 0)
 	globalParams.reset(new GlobalParams());
-#else
-	std::unique_ptr<GlobalParams> globalParamsPtr(new GlobalParams());
-	globalParams = globalParamsPtr.get();
-#endif
 	globalParams->setErrQuiet(true);
 
 	QString pdfFile = QDir::toNativeSeparators(fName);
 	QByteArray encodedFileName = os_is_win() ? pdfFile.toUtf8() : QFile::encodeName(pdfFile);
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(22, 3, 0)
 	auto fname = std::make_unique<GooString>(encodedFileName.data());
 	PDFDoc pdfDoc{ std::move(fname) };
-#else
-	auto fname = new GooString(encodedFileName.data());
-	PDFDoc pdfDoc{fname, nullptr, nullptr, nullptr};
-#endif
 	if (!pdfDoc.isOk() || pdfDoc.getErrorCode() == errEncrypted)
 		return QImage();
 
@@ -148,13 +122,13 @@
 	m_cancel = false;
 	bool ret = false;
 	QFileInfo fi(fNameIn);
-	if ( !ScCore->usingGUI() )
+	if (!ScCore->usingGUI())
 	{
 		m_interactive = false;
 		showProgress = false;
 	}
-	m_baseFile = QDir::cleanPath(QDir::toNativeSeparators(fi.absolutePath()+"/"));
-	if ( showProgress )
+	m_baseFile = QDir::cleanPath(QDir::toNativeSeparators(fi.absolutePath() + "/"));
+	if (showProgress)
 	{
 		ScribusMainWindow* mw = (m_Doc == nullptr) ? ScCore->primaryMainWindow() : m_Doc->scMW();
 		m_progressDialog = new MultiProgressDialog( tr("Importing: %1").arg(fi.fileName()), CommonStrings::tr_Cancel, mw );
@@ -320,7 +294,6 @@
 bool PdfPlug::convert(const QString& fn)
 {
 	bool firstPg = true;
-	int currentLayer = m_Doc->activeLayer();
 	int baseLayer = m_Doc->activeLayer();
 	m_importedColors.clear();
 	if (m_progressDialog)
@@ -331,23 +304,13 @@
 		qApp->processEvents();
 	}
 
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(0, 83, 0)
 	globalParams.reset(new GlobalParams());
-#else
-	std::unique_ptr<GlobalParams> globalParamsPtr(new GlobalParams());
-	globalParams = globalParamsPtr.get();
-#endif
 	globalParams->setErrQuiet(true);
 
 	QList<OptionalContentGroup*> ocgGroups;
 	QByteArray encodedFileName = os_is_win() ? fn.toUtf8() : QFile::encodeName(fn);
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(22, 3, 0)
 	auto fname = std::make_unique<GooString>(encodedFileName.data());
 	auto pdfDoc = std::make_unique<PDFDoc>(std::move(fname));
-#else
-	auto fname = new GooString(encodedFileName.data());
-	auto pdfDoc = std::unique_ptr<PDFDoc>(new PDFDoc(fname, nullptr, nullptr, nullptr));
-#endif
 	if (pdfDoc)
 	{
 		if (pdfDoc->getErrorCode() == errEncrypted)
@@ -361,24 +324,15 @@
 			QString text = QInputDialog::getText(mw, tr("Open PDF-File"), tr("Password"), QLineEdit::Normal, "", &ok);
 			if (ok && !text.isEmpty())
 			{
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(22, 3, 0)
 				auto fname = std::make_unique<GooString>(encodedFileName.data());
 				std::optional<GooString> userPW(std::in_place, text.toLocal8Bit().data());
 				pdfDoc.reset(new PDFDoc(std::move(fname), userPW, userPW, nullptr));
-#else
-				auto fname = new GooString(encodedFileName.data());
-				auto userPW = new GooString(text.toLocal8Bit().data());
-				pdfDoc.reset(new PDFDoc(fname, userPW, userPW, nullptr));
-#endif
 				qApp->changeOverrideCursor(QCursor(Qt::WaitCursor));
 			}
 			if ((!pdfDoc) || (pdfDoc->getErrorCode() != errNone))
 			{
 				if (m_progressDialog)
 					m_progressDialog->close();
-#if POPPLER_ENCODED_VERSION < POPPLER_VERSION_ENCODE(0, 83, 0)
-				delete globalParams;
-#endif
 				return false;
 			}
 			if (m_progressDialog)
@@ -462,11 +416,11 @@
 
 			if (dev->isOk())
 			{
-				OCGs* ocg = pdfDoc->getOptContentConfig();
+				POPPLER_CONST_25_02 OCGs* ocg = pdfDoc->getOptContentConfig();
 				if (ocg && ocg->hasOCGs())
 				{
 					QStringList ocgNames;
-					Array *order = ocg->getOrderArray();
+					POPPLER_CONST_25_02 Array *order = ocg->getOrderArray();
 					if (order)
 					{
 						for (int i = 0; i < order->getLength (); ++i)
@@ -474,7 +428,7 @@
 							Object orderItem = order->get(i);
 							if (orderItem.isDict())
 							{
-								const Object& ref = order->getNF(i);
+								const Object & ref = order->getNF(i);
 								if (ref.isRef())
 								{
 									OptionalContentGroup *oc = ocg->findOcgByRef(ref.getRef());
@@ -528,6 +482,7 @@
 					if (ocg && ocg->hasOCGs())
 					{
 						QString actL(m_Doc->activeLayerName());
+						int currentLayer;
 						for (int i = 0; i < ocgGroups.count(); i++)
 						{
 							OptionalContentGroup *oc = ocgGroups[i];
@@ -753,13 +708,8 @@
 							names = catDict.dictLookup("OpenAction");
 							if (names.isDict())
 							{
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(0, 86, 0)
 								std::unique_ptr<LinkAction> linkActionUPtr = LinkAction::parseAction(&names, pdfDoc->getCatalog()->getBaseURI());
 								LinkAction *linkAction = linkActionUPtr.get();
-#else
-								LinkAction *linkAction = nullptr;
-								linkAction = LinkAction::parseAction(&names, pdfDoc->getCatalog()->getBaseURI());
-#endif
 								if (linkAction && (linkAction->getKind() == actionJavaScript))
 								{
 									LinkJavaScript *jsa = (LinkJavaScript*) linkAction;
@@ -827,11 +777,7 @@
 		}
 		pdfDoc.reset();
 	}
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(0, 83, 0)
 	globalParams.reset();
-#else
-	globalParams = nullptr;
-#endif
 
 //	qDebug() << "converting finished";
 //	qDebug() << "Imported" << m_elements.count() << "Elements";
@@ -928,7 +874,7 @@
 
 QString PdfPlug::UnicodeParsedString(const GooString *s1)
 {
-	if ( !s1 || s1->getLength() == 0 )
+	if (!s1 || s1->getLength() == 0)
 		return QString();
 	bool isUnicode;
 	int i;
diff -Naur a/scribus/plugins/import/pdf/importpdfplugin.cpp b/scribus/plugins/import/pdf/importpdfplugin.cpp
--- a/scribus/plugins/import/pdf/importpdfplugin.cpp	2025-01-08 00:06:55.000000000 +0100
+++ b/scribus/plugins/import/pdf/importpdfplugin.cpp	2025-02-28 12:36:04.553116689 +0100
@@ -193,13 +193,13 @@
 		activeTransaction = UndoManager::instance()->beginTransaction(trSettings);
 
 	bool isCleanedFile = false;
-	QString cleanFile = "";
+	QString cleanFile;
 	if (exts.contains(fi.suffix().toLower()))
 	{
 		if (!ScCore->haveGS())
 		{
 			qApp->changeOverrideCursor(QCursor(Qt::ArrowCursor));
-			ScMessageBox::warning(ScCore->primaryMainWindow(), CommonStrings::trWarning, tr("The Import plugin cannot handle Postscript files"));
+			ScMessageBox::warning(ScCore->primaryMainWindow(), CommonStrings::trWarning, tr("The Import plugin cannot handle PostScript files"));
 			qApp->changeOverrideCursor(QCursor(Qt::WaitCursor));
 			return false;
 		}
diff -Naur a/scribus/plugins/import/pdf/pdfimportoptions.cpp b/scribus/plugins/import/pdf/pdfimportoptions.cpp
--- a/scribus/plugins/import/pdf/pdfimportoptions.cpp	2025-01-08 00:06:55.000000000 +0100
+++ b/scribus/plugins/import/pdf/pdfimportoptions.cpp	2025-02-28 12:36:04.553116689 +0100
@@ -17,7 +17,7 @@
 PdfImportOptions::PdfImportOptions(QWidget *parent) : QDialog(parent), ui(new Ui::PdfImportOptions)
 {
 	ui->setupUi(this);
-	ui->pageSelectButton->setIcon(IconManager::instance().loadIcon("ellipsis.png"));
+	ui->pageSelectButton->setIcon(IconManager::instance().loadIcon("ellipsis"));
 
 	connect(ui->buttonBox, SIGNAL(accepted()), this, SLOT(onOkButtonClicked()));
 	connect(ui->buttonBox, SIGNAL(rejected()), this, SLOT(reject()));
diff -Naur a/scribus/plugins/import/pdf/pdfimportoptions.ui b/scribus/plugins/import/pdf/pdfimportoptions.ui
--- a/scribus/plugins/import/pdf/pdfimportoptions.ui	2025-01-08 00:06:55.000000000 +0100
+++ b/scribus/plugins/import/pdf/pdfimportoptions.ui	2025-02-28 12:36:04.553116689 +0100
@@ -7,31 +7,31 @@
     <x>0</x>
     <y>0</y>
     <width>477</width>
-    <height>468</height>
+    <height>608</height>
    </rect>
   </property>
   <property name="windowTitle">
    <string>PDF-Import</string>
   </property>
   <property name="sizeGripEnabled">
-   <bool>true</bool>
-  </property>
-  <layout class="QVBoxLayout" name="verticalLayout_5">
-   <property name="leftMargin">
-    <number>9</number>
-   </property>
-   <property name="topMargin">
-    <number>9</number>
-   </property>
-   <property name="rightMargin">
-    <number>9</number>
-   </property>
-   <property name="bottomMargin">
-    <number>9</number>
-   </property>
-   <item>
-    <layout class="QHBoxLayout" name="horizontalLayout_5">
-     <item>
+   <bool>true</bool>
+  </property>
+  <layout class="QVBoxLayout" name="verticalLayout_5">
+   <property name="leftMargin">
+    <number>9</number>
+   </property>
+   <property name="topMargin">
+    <number>9</number>
+   </property>
+   <property name="rightMargin">
+    <number>9</number>
+   </property>
+   <property name="bottomMargin">
+    <number>9</number>
+   </property>
+   <item>
+    <layout class="QHBoxLayout" name="horizontalLayout_5">
+     <item>
       <widget class="QLabel" name="label">
        <property name="sizePolicy">
         <sizepolicy hsizetype="Maximum" vsizetype="Preferred">
@@ -109,12 +109,12 @@
              <string>Choose Pages</string>
             </property>
            </widget>
-          </item>
-          <item>
-           <layout class="QHBoxLayout" name="horizontalLayout">
-            <property name="leftMargin">
-             <number>15</number>
-            </property>
+          </item>
+          <item>
+           <layout class="QHBoxLayout" name="horizontalLayout">
+            <property name="leftMargin">
+             <number>15</number>
+            </property>
             <item>
              <widget class="QLineEdit" name="pageRangeString">
               <property name="enabled">
@@ -184,25 +184,25 @@
          </layout>
         </widget>
        </item>
-       <item alignment="Qt::AlignTop">
+       <item alignment="Qt::AlignmentFlag::AlignTop">
         <widget class="QGroupBox" name="groupBox_2">
          <property name="sizePolicy">
           <sizepolicy hsizetype="Preferred" vsizetype="Maximum">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
-          </sizepolicy>
-         </property>
-         <property name="title">
-          <string>Text</string>
-         </property>
-         <layout class="QVBoxLayout" name="verticalLayout_8">
-          <item>
+          </sizepolicy>
+         </property>
+         <property name="title">
+          <string>Text</string>
+         </property>
+         <layout class="QVBoxLayout" name="verticalLayout_8">
+          <item>
            <widget class="QRadioButton" name="textAsVectors">
             <property name="enabled">
              <bool>true</bool>
             </property>
             <property name="text">
-             <string>Import Text As Vectors</string>
+             <string>Import text as vectors</string>
             </property>
             <property name="checked">
              <bool>true</bool>
@@ -210,16 +210,32 @@
            </widget>
           </item>
           <item>
+           <widget class="QLabel" name="label_2">
+            <property name="minimumSize">
+             <size>
+              <width>0</width>
+              <height>21</height>
+             </size>
+            </property>
+            <property name="text">
+             <string>Text will look exactly like in the PDF, but can't be edited or selected as text anymore.</string>
+            </property>
+            <property name="wordWrap">
+             <bool>true</bool>
+            </property>
+           </widget>
+          </item>
+          <item>
            <widget class="QRadioButton" name="textAsText">
             <property name="text">
-             <string>Import Text As Text</string>
+             <string>Import text as text</string>
             </property>
            </widget>
           </item>
           <item>
-           <widget class="QLabel" name="label_2">
+           <widget class="QLabel" name="label_3">
             <property name="text">
-             <string>Note: importing text as text may significantly alter PDF visual aspect</string>
+             <string>Text will be imported in text frames and will be editable, but it might have different sizes, spacing, and fonts.</string>
             </property>
             <property name="wordWrap">
              <bool>true</bool>
@@ -232,7 +248,7 @@
        <item>
         <spacer name="verticalSpacer">
          <property name="orientation">
-          <enum>Qt::Vertical</enum>
+          <enum>Qt::Orientation::Vertical</enum>
          </property>
          <property name="sizeHint" stdset="0">
           <size>
@@ -261,16 +277,16 @@
           </size>
          </property>
          <property name="frameShape">
-          <enum>QFrame::Panel</enum>
+          <enum>QFrame::Shape::Panel</enum>
          </property>
          <property name="frameShadow">
-          <enum>QFrame::Sunken</enum>
+          <enum>QFrame::Shadow::Sunken</enum>
          </property>
          <property name="text">
           <string/>
          </property>
          <property name="alignment">
-          <set>Qt::AlignCenter</set>
+          <set>Qt::AlignmentFlag::AlignCenter</set>
          </property>
         </widget>
        </item>
@@ -279,7 +295,7 @@
          <item>
           <spacer name="horizontalSpacer">
            <property name="orientation">
-            <enum>Qt::Horizontal</enum>
+            <enum>Qt::Orientation::Horizontal</enum>
            </property>
            <property name="sizeHint" stdset="0">
             <size>
@@ -295,7 +311,7 @@
          <item>
           <spacer name="horizontalSpacer_2">
            <property name="orientation">
-            <enum>Qt::Horizontal</enum>
+            <enum>Qt::Orientation::Horizontal</enum>
            </property>
            <property name="sizeHint" stdset="0">
             <size>
@@ -314,10 +330,10 @@
    <item>
     <widget class="QDialogButtonBox" name="buttonBox">
      <property name="orientation">
-      <enum>Qt::Horizontal</enum>
+      <enum>Qt::Orientation::Horizontal</enum>
      </property>
      <property name="standardButtons">
-      <set>QDialogButtonBox::Cancel|QDialogButtonBox::Ok</set>
+      <set>QDialogButtonBox::StandardButton::Cancel|QDialogButtonBox::StandardButton::Ok</set>
      </property>
     </widget>
    </item>
diff -Naur a/scribus/plugins/import/pdf/pdftextrecognition.cpp b/scribus/plugins/import/pdf/pdftextrecognition.cpp
--- a/scribus/plugins/import/pdf/pdftextrecognition.cpp	2025-01-08 00:06:55.000000000 +0100
+++ b/scribus/plugins/import/pdf/pdftextrecognition.cpp	2025-02-28 12:36:04.553116689 +0100
@@ -14,7 +14,7 @@
 */
 PdfTextRecognition::PdfTextRecognition()
 {
-	m_pdfTextRegions.push_back(PdfTextRegion());
+	m_pdfTextRegions.emplace_back();
 	activePdfTextRegion = &(m_pdfTextRegions.back());
 	setCharMode(AddCharMode::ADDFIRSTCHAR);
 }
@@ -31,7 +31,7 @@
 */
 void PdfTextRecognition::addPdfTextRegion()
 {
-	m_pdfTextRegions.push_back(PdfTextRegion());
+	m_pdfTextRegions.emplace_back();
 	activePdfTextRegion = &(m_pdfTextRegions.back());
 	setCharMode(PdfTextRecognition::AddCharMode::ADDFIRSTCHAR);
 }
@@ -39,7 +39,7 @@
 /*
 *	function called via integration with poppler's addChar callback. It decides how to add the charter based on the mode that is set
 */
-void PdfTextRecognition::addChar(GfxState* state, double x, double y, double dx, double dy, double originX, double originY, CharCode code, int nBytes, POPPLER_CONST_082 Unicode* u, int uLen)
+void PdfTextRecognition::addChar(GfxState* state, double x, double y, double dx, double dy, double originX, double originY, CharCode code, int nBytes, const Unicode* u, int uLen)
 {
 	if (!u || uLen == 0)
 		return;
@@ -66,12 +66,12 @@
 /*
 *	basic test to see if the point lies in a new line or region
 */
-bool PdfTextRecognition::isNewLineOrRegion(QPointF newPosition)
+bool PdfTextRecognition::isNewLineOrRegion(const QPointF& newPosition)
 {
-	return (activePdfTextRegion->collinear(activePdfTextRegion->lastXY.y(), activePdfTextRegion->pdfTextRegionLines.back().baseOrigin.y()) &&
-		!activePdfTextRegion->collinear(newPosition.y(), activePdfTextRegion->lastXY.y()))
-		|| (activePdfTextRegion->collinear(newPosition.y(), activePdfTextRegion->lastXY.y())
-			&& !activePdfTextRegion->isCloseToX(newPosition.x(), activePdfTextRegion->lastXY.x()));
+	return (PdfTextRegion::collinear(activePdfTextRegion->lastXY.y(), activePdfTextRegion->pdfTextRegionLines.back().baseOrigin.y()) &&
+	           !PdfTextRegion::collinear(newPosition.y(), activePdfTextRegion->lastXY.y()))
+	        || (PdfTextRegion::collinear(newPosition.y(), activePdfTextRegion->lastXY.y())
+	            && !activePdfTextRegion->isCloseToX(newPosition.x(), activePdfTextRegion->lastXY.x()));
 }
 
 
@@ -188,7 +188,7 @@
 *	like collinear but we allow a deviation of 6 text widths from between positions or 1 text width from the textregion's x origin
 *   FIXME: This should use the char width not linespacing which is y
 */
-bool PdfTextRegion::isCloseToX(qreal x1, qreal x2)
+bool PdfTextRegion::isCloseToX(qreal x1, qreal x2) const
 {
 	return (abs(x2 - x1) <= lineSpacing * 6) || (abs(x1 - this->pdfTextRegionBasenOrigin.x()) <= lineSpacing);
 }
@@ -196,7 +196,7 @@
 /*
 *	like collinear but we allow a deviation of 3 text heights downwards but none upwards
 */
-bool PdfTextRegion::isCloseToY(qreal y1, qreal y2)
+bool PdfTextRegion::isCloseToY(qreal y1, qreal y2) const
 {
 	return (y2 - y1) >= 0 && y2 - y1 <= lineSpacing * 3;
 }
@@ -204,7 +204,7 @@
 /*
 *	less than, page upwards, the last y value but bot more than the line spacing less, could also use the base line of the last line to be more accurate
 */
-bool PdfTextRegion::adjunctLesser(qreal testY, qreal lastY, qreal baseY)
+bool PdfTextRegion::adjunctLesser(qreal testY, qreal lastY, qreal baseY) const
 {
 	return (testY > lastY
 		&& testY <= baseY + lineSpacing
@@ -214,7 +214,7 @@
 /*
 *	greater, page downwards, than the last y value but not more than 3/4 of a line space below baseline
 */
-bool PdfTextRegion::adjunctGreater(qreal testY, qreal lastY, qreal baseY)
+bool PdfTextRegion::adjunctGreater(qreal testY, qreal lastY, qreal baseY) const
 {
 	return (testY <= lastY
 		&& testY >= baseY - lineSpacing * 0.75
@@ -232,7 +232,7 @@
 *	TODO: support NEWLINE new paragraphs with multiple linespaces and indented x insteads of just ignoring the relative x position
 *	TODO: I don't know if the invariant qDebug cases should always report an error or only do so when DEBUG_TEXT_IMPORT is defined. My feeling is they should always report because it meanms something has happened that shouldn't have and it's useful feedback.
 */
-PdfTextRegion::LineType PdfTextRegion::linearTest(QPointF point, bool xInLimits, bool yInLimits)
+PdfTextRegion::LineType PdfTextRegion::linearTest(const QPointF& point, bool xInLimits, bool yInLimits) const
 {
 	if (collinear(point.y(), lastXY.y()))
 	{
@@ -282,7 +282,7 @@
 *	Perform some fuzzy checks to see if newPoint can reasonably be ascribed to the current textframe.
 *	FIXME: It may be that move and addGlyph need different versions of isCloseToX and isCloseToY but keep them the same just for now
 */
-PdfTextRegion::LineType PdfTextRegion::isRegionConcurrent(QPointF newPoint)
+PdfTextRegion::LineType PdfTextRegion::isRegionConcurrent(const QPointF& newPoint)
 {
 	if (glyphs.empty())
 	{
@@ -306,7 +306,7 @@
 *		Also needs to have support for rotated text, but I expect I'll add this by removing the text rotation
 *		from calls to movepoint and addGlyph and instead rotating the whole text region as a block
 */
-PdfTextRegion::LineType PdfTextRegion::moveToPoint(QPointF newPoint)
+PdfTextRegion::LineType PdfTextRegion::moveToPoint(const QPointF& newPoint)
 {
 	//qDebug() << "moveToPoint: " << newPoint;
 
@@ -323,7 +323,7 @@
 	if (mode == LineType::NEWLINE || mode == LineType::FIRSTPOINT)
 	{
 		if (mode != LineType::FIRSTPOINT || pdfTextRegionLines.empty())
-			pdfTextRegionLines.push_back(PdfTextRegionLine());
+			pdfTextRegionLines.emplace_back();
 
 		pdfTextRegionLine = &pdfTextRegionLines.back();
 		pdfTextRegionLine->baseOrigin = newPoint;
@@ -340,7 +340,7 @@
 		|| mode == LineType::NEWLINE
 		|| (mode != LineType::FIRSTPOINT && pdfTextRegionLine->segments[0].glyphIndex != pdfTextRegionLine->glyphIndex))
 	{
-		PdfTextRegionLine newSegment = PdfTextRegionLine();
+		PdfTextRegionLine newSegment;
 		pdfTextRegionLine->segments.push_back(newSegment);
 	}
 	PdfTextRegionLine* segment = &pdfTextRegionLine->segments.back();
@@ -373,9 +373,9 @@
 *		Approximated heights and widths and linespaces need to use the correct font data when font support has been added,
 *		but for now just use the x advance value. using font data should also allow for the support of rotated text that may use a mixture of x and y advance
 */
-PdfTextRegion::LineType PdfTextRegion::addGlyphAtPoint(QPointF newGlyphPoint, PdfGlyph newGlyph)
+PdfTextRegion::LineType PdfTextRegion::addGlyphAtPoint(const QPointF& newGlyphPoint, const PdfGlyph& newGlyph)
 {
-	QPointF movedGlyphPoint = QPointF(newGlyphPoint.x() + newGlyph.dx, newGlyphPoint.y() + newGlyph.dy);
+	QPointF movedGlyphPoint(newGlyphPoint.x() + newGlyph.dx, newGlyphPoint.y() + newGlyph.dy);
 	if (glyphs.size() == 1)
 	{
 		lineSpacing = newGlyph.dx * 3;
@@ -425,7 +425,7 @@
 void PdfTextRegion::renderToTextFrame(PageItem* textNode)
 {
 	textNode->setWidthHeight(this->maxWidth, this->maxHeight);
-	QString bodyText = "";
+	QString bodyText;
 	for (int glyphIndex = this->pdfTextRegionLines.begin()->glyphIndex; glyphIndex <= this->pdfTextRegionLines.back().segments.back().glyphIndex; glyphIndex++)
 		bodyText += glyphs[glyphIndex].code;
 
@@ -436,7 +436,7 @@
 /*
 *	Quick test to see if this is a virgin textregion
 */
-bool PdfTextRegion::isNew()
+bool PdfTextRegion::isNew() const
 {
 	return pdfTextRegionLines.empty() ||
 		glyphs.empty();
@@ -579,7 +579,6 @@
 	*	This code can be used to set PoLine instead of setting the FrameShape if setting the PoLine is the more correct way of doing things.
 	*	I have no idea of what the PoLine is at this time except for it changes when the shape is set and appears to be unit scales as opposed to percentage scaled
 	FPointArray boundingBoxShape;
-	boundingBoxShape.resize(0);
 	boundingBoxShape.svgInit();
 	//doubles to create a shape, it's 100% textframe width by 100% textframe height
 
@@ -619,7 +618,7 @@
 	item->OwnPage = m_doc->OnPage(item);
 }
 
-void PdfTextOutputDev::drawChar(GfxState* state, double x, double y, double dx, double dy, double originX, double originY, CharCode code, int nBytes, POPPLER_CONST_082 Unicode* u, int uLen)
+void PdfTextOutputDev::drawChar(GfxState* state, double x, double y, double dx, double dy, double originX, double originY, CharCode code, int nBytes, const Unicode* u, int uLen)
 {
 	// TODO Implement the clipping operations. At least the characters are shown.
 	int textRenderingMode = state->getRender();
@@ -681,7 +680,7 @@
 * NOTE: Override these for now and do nothing so they don't get picked up and rendered as vectors by the base class,
 	though in the long run we may actually want that unless they can be implemented in a similar way to the text import getChar in which case overloading the makes perfect sense.
 */
-bool PdfTextOutputDev::beginType3Char(GfxState* state, double x, double y, double dx, double dy, CharCode code, POPPLER_CONST_082 Unicode* u, int uLen)
+bool PdfTextOutputDev::beginType3Char(GfxState* state, double x, double y, double dx, double dy, CharCode code, const Unicode* u, int uLen)
 {
 	//stub
 	return true;
diff -Naur a/scribus/plugins/import/pdf/pdftextrecognition.h b/scribus/plugins/import/pdf/pdftextrecognition.h
--- a/scribus/plugins/import/pdf/pdftextrecognition.h	2025-01-08 00:06:55.000000000 +0100
+++ b/scribus/plugins/import/pdf/pdftextrecognition.h	2025-02-28 12:36:04.553116689 +0100
@@ -24,9 +24,9 @@
 */
 struct PdfGlyph
 {
-	double dx;  // X advance value
-	double dy;  // Y advance value
-	double rise;    // Text rise parameter
+	double dx { 0.0 };  // X advance value
+	double dy { 0.0 };  // Y advance value
+	double rise { 0.0 };    // Text rise parameter
 	QChar code;   // UTF-16 coded character
 };
 
@@ -89,16 +89,16 @@
 	std::vector<PdfGlyph> glyphs;
 
 	static bool collinear(qreal a, qreal b);
-	bool isCloseToX(qreal x1, qreal x2);
-	bool isCloseToY(qreal y1, qreal y2);
-	bool adjunctLesser(qreal testY, qreal lastY, qreal baseY);
-	bool adjunctGreater(qreal testY, qreal lastY, qreal baseY);
-	PdfTextRegion::LineType linearTest(QPointF point, bool xInLimits, bool yInLimits);
-	PdfTextRegion::LineType isRegionConcurrent(QPointF newPoint);
-	PdfTextRegion::LineType moveToPoint(QPointF newPoint);
-	PdfTextRegion::LineType addGlyphAtPoint(QPointF newGlyphPoint, PdfGlyph new_glyph);
+	bool isCloseToX(qreal x1, qreal x2) const;
+	bool isCloseToY(qreal y1, qreal y2) const;
+	bool adjunctLesser(qreal testY, qreal lastY, qreal baseY) const;
+	bool adjunctGreater(qreal testY, qreal lastY, qreal baseY) const;
+	PdfTextRegion::LineType linearTest(const QPointF& point, bool xInLimits, bool yInLimits) const;
+	PdfTextRegion::LineType isRegionConcurrent(const QPointF& newPoint);
+	PdfTextRegion::LineType moveToPoint(const QPointF& newPoint);
+	PdfTextRegion::LineType addGlyphAtPoint(const QPointF& newGlyphPoint, const PdfGlyph& new_glyph);
 	void renderToTextFrame(PageItem* textNode);
-	bool isNew();
+	bool isNew() const;
 };
 
 class PdfTextRecognition
@@ -124,8 +124,8 @@
 	PdfTextRegion* activePdfTextRegion = nullptr; //faster and cleaner than calling back on the vector all the time.
 
 	void addPdfTextRegion();
-	void addChar(GfxState* state, double x, double y, double dx, double dy, double originX, double originY, CharCode code, int nBytes, POPPLER_CONST_082 Unicode* u, int uLen);
-	bool isNewLineOrRegion(QPointF newPosition);
+	void addChar(GfxState* state, double x, double y, double dx, double dy, double originX, double originY, CharCode code, int nBytes, const Unicode* u, int uLen);
+	bool isNewLineOrRegion(const QPointF& newPosition);
 
 private:
 	std::vector<PdfTextRegion> m_pdfTextRegions = std::vector<PdfTextRegion>();
@@ -149,8 +149,8 @@
 	//----- text drawing
 	void  beginTextObject(GfxState* state) override;
 	void  endTextObject(GfxState* state) override;
-	void  drawChar(GfxState* state, double /*x*/, double /*y*/, double /*dx*/, double /*dy*/, double /*originX*/, double /*originY*/, CharCode /*code*/, int /*nBytes*/, POPPLER_CONST_082 Unicode* /*u*/, int /*uLen*/) override;
-	bool  beginType3Char(GfxState* /*state*/, double /*x*/, double /*y*/, double /*dx*/, double /*dy*/, CharCode /*code*/, POPPLER_CONST_082 Unicode* /*u*/, int /*uLen*/) override;
+	void  drawChar(GfxState* state, double /*x*/, double /*y*/, double /*dx*/, double /*dy*/, double /*originX*/, double /*originY*/, CharCode /*code*/, int /*nBytes*/, const Unicode* /*u*/, int /*uLen*/) override;
+	bool  beginType3Char(GfxState* /*state*/, double /*x*/, double /*y*/, double /*dx*/, double /*dy*/, CharCode /*code*/, const Unicode* /*u*/, int /*uLen*/) override;
 	void  endType3Char(GfxState* /*state*/) override;
 	void  type3D0(GfxState* /*state*/, double /*wx*/, double /*wy*/) override;
 	void  type3D1(GfxState* /*state*/, double /*wx*/, double /*wy*/, double /*llx*/, double /*lly*/, double /*urx*/, double /*ury*/) override;
diff -Naur a/scribus/plugins/import/pdf/slaoutput.cpp b/scribus/plugins/import/pdf/slaoutput.cpp
--- a/scribus/plugins/import/pdf/slaoutput.cpp	2025-01-08 00:06:55.000000000 +0100
+++ b/scribus/plugins/import/pdf/slaoutput.cpp	2025-02-28 12:36:04.557116699 +0100
@@ -8,9 +8,7 @@
 #include "slaoutput.h"
 
 #include <memory>
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(22, 2, 0)
 #include <optional>
-#endif
 
 #include <poppler/GlobalParams.h>
 #include <poppler/poppler-config.h>
@@ -165,13 +163,8 @@
 	int shade = 100;
 	currColorText = getColor(state->getFillColorSpace(), state->getFillColor(), &shade);
 	fontSize = state->getFontSize();
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(22, 4, 0)
 	if (state->getFont() && state->getFont()->getName())
 		fontName.reset(new GooString(state->getFont()->getName().value()));
-#else
-	if (state->getFont())
-		fontName.reset(state->getFont()->getName()->copy());
-#endif
 #if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(25, 01, 0)
 	itemText = s->copy();
 #else
@@ -310,8 +303,8 @@
 	obj = m_xref->fetch(refa.num, refa.gen);
 	if (obj.isDict())
 	{
-		Dict* adic = obj.getDict();
-		const Object& additionalActions = adic->lookupNF("A");
+		const Dict* adic = obj.getDict();
+		const Object & additionalActions = adic->lookupNF("A");
 		Object additionalActionsObject = additionalActions.fetch(m_pdfDoc->getXRef());
 		if (additionalActionsObject.isDict())
 		{
@@ -330,23 +323,17 @@
 }
 
 /* Replacement for the crippled Poppler function LinkAction* AnnotWidget::getAdditionalAction(AdditionalActionsType type) */
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(0, 86, 0)
 std::unique_ptr<LinkAction> SlaOutputDev::SC_getAdditionalAction(const char *key, AnnotWidget *ano)
 {
 	std::unique_ptr<LinkAction> linkAction;
-#else
-LinkAction* SlaOutputDev::SC_getAdditionalAction(const char *key, AnnotWidget *ano)
-{
-	LinkAction *linkAction = nullptr;
-#endif
 	Object obj;
 	Ref refa = ano->getRef();
 
 	obj = m_xref->fetch(refa.num, refa.gen);
 	if (obj.isDict())
 	{
-		Dict* adic = obj.getDict();
-		const Object& additionalActions = adic->lookupNF("AA");
+		const Dict* adic = obj.getDict();
+		const Object & additionalActions = adic->lookupNF("AA");
 		Object additionalActionsObject = additionalActions.fetch(m_pdfDoc->getXRef());
 		if (additionalActionsObject.isDict())
 		{
@@ -361,30 +348,25 @@
 bool SlaOutputDev::annotations_callback(Annot *annota, void *user_data)
 {
 	auto *dev = (SlaOutputDev*) user_data;
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(22, 4, 0)
-	const PDFRectangle& annotRect = annota->getRect();
-	const PDFRectangle* box = &annotRect;
-#else
-	PDFRectangle *box = annota->getRect();
-#endif
-	double xCoor = dev->m_doc->currentPage()->xOffset() + box->x1 - dev->cropOffsetX;
-	double yCoor = dev->m_doc->currentPage()->yOffset() + dev->m_doc->currentPage()->height() - box->y2 + dev->cropOffsetY;
-	double width = box->x2 - box->x1;
-	double height = box->y2 - box->y1;
+	const PDFRectangle& box = annota->getRect();
+	double xCoor = dev->m_doc->currentPage()->xOffset() + box.x1 - dev->cropOffsetX;
+	double yCoor = dev->m_doc->currentPage()->yOffset() + dev->m_doc->currentPage()->height() - box.y2 + dev->cropOffsetY;
+	double width = box.x2 - box.x1;
+	double height = box.y2 - box.y1;
 	if (dev->rotate == 90)
 	{
-		xCoor = dev->m_doc->currentPage()->xOffset() - dev->cropOffsetX + box->y2;
-		yCoor = dev->m_doc->currentPage()->yOffset() + dev->cropOffsetY + box->x1;
+		xCoor = dev->m_doc->currentPage()->xOffset() - dev->cropOffsetX + box.y2;
+		yCoor = dev->m_doc->currentPage()->yOffset() + dev->cropOffsetY + box.x1;
 	}
 	else if (dev->rotate == 180)
 	{
-		xCoor = dev->m_doc->currentPage()->xOffset() - dev->cropOffsetX + dev->m_doc->currentPage()->width() - box->x1;
-		yCoor = dev->m_doc->currentPage()->yOffset() + dev->cropOffsetY + box->y2;
+		xCoor = dev->m_doc->currentPage()->xOffset() - dev->cropOffsetX + dev->m_doc->currentPage()->width() - box.x1;
+		yCoor = dev->m_doc->currentPage()->yOffset() + dev->cropOffsetY + box.y2;
 	}
 	else if (dev->rotate == 270)
 	{
-		xCoor = dev->m_doc->currentPage()->xOffset() - dev->cropOffsetX + dev->m_doc->currentPage()->width() - box->y2;
-		yCoor = dev->m_doc->currentPage()->yOffset() + dev->cropOffsetY + dev->m_doc->currentPage()->height() - box->x1;
+		xCoor = dev->m_doc->currentPage()->xOffset() - dev->cropOffsetX + dev->m_doc->currentPage()->width() - box.y2;
+		yCoor = dev->m_doc->currentPage()->yOffset() + dev->cropOffsetY + dev->m_doc->currentPage()->height() - box.x1;
 	}
 	bool retVal = true;
 	if (annota->getType() == Annot::typeText)
@@ -398,7 +380,7 @@
 
 bool SlaOutputDev::handleTextAnnot(Annot* annota, double xCoor, double yCoor, double width, double height)
 {
-	auto *anl = (AnnotText*) annota;
+	const auto *anl = (AnnotText*) annota;
 	int z = m_doc->itemAdd(PageItem::TextFrame, PageItem::Rectangle, xCoor, yCoor, width, height, 0, CommonStrings::None, CommonStrings::None);
 	PageItem *ite = m_doc->Items->at(z);
 	int flg = annota->getFlags();
@@ -450,7 +432,7 @@
 
 bool SlaOutputDev::handleLinkAnnot(Annot* annota, double xCoor, double yCoor, double width, double height)
 {
-	auto *anl = (AnnotLink*) annota;
+	const auto *anl = (AnnotLink*) annota;
 	LinkAction *act = anl->getAction();
 	if (!act)
 		return false;
@@ -461,7 +443,7 @@
 	QString fileName;
 	if (act->getKind() == actionGoTo)
 	{
-		auto *gto = (LinkGoTo*) act;
+		const auto *gto = (LinkGoTo*) act;
 		const LinkDest *dst = gto->getDest();
 		if (dst)
 		{
@@ -470,11 +452,7 @@
 				if (dst->isPageRef())
 				{
 					Ref dstr = dst->getPageRef();
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(0, 76, 0)
 					pagNum = m_pdfDoc->findPage(dstr);
-#else
-					pagNum = m_pdfDoc->findPage(dstr.num, dstr.gen);
-#endif
 				}
 				else
 					pagNum = dst->getPageNum();
@@ -488,21 +466,13 @@
 			const GooString *ndst = gto->getNamedDest();
 			if (ndst)
 			{
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(0, 86, 0)
 				std::unique_ptr<LinkDest> dstn = m_pdfDoc->findDest(ndst);
-#else
-				LinkDest *dstn = m_pdfDoc->findDest(ndst);
-#endif
 				if (dstn && (dstn->getKind() == destXYZ))
 				{
 					if (dstn->isPageRef())
 					{
 						Ref dstr = dstn->getPageRef();
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(0, 76, 0)
 						pagNum = m_pdfDoc->findPage(dstr);
-#else
-						pagNum = m_pdfDoc->findPage(dstr.num, dstr.gen);
-#endif
 					}
 					else
 						pagNum = dstn->getPageNum();
@@ -515,7 +485,7 @@
 	}
 	else if (act->getKind() == actionGoToR)
 	{
-		auto *gto = (LinkGoToR*) act;
+		const auto *gto = (LinkGoToR*) act;
 		fileName = UnicodeParsedString(gto->getFileName());
 		const LinkDest *dst = gto->getDest();
 		if (dst)
@@ -533,11 +503,7 @@
 			const GooString *ndst = gto->getNamedDest();
 			if (ndst)
 			{
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(0, 86, 0)
 				std::unique_ptr<LinkDest> dstn = m_pdfDoc->findDest(ndst);
-#else
-				LinkDest *dstn = m_pdfDoc->findDest(ndst);
-#endif
 				if (dstn && (dstn->getKind() == destXYZ))
 				{
 					pagNum = dstn->getPageNum();
@@ -550,7 +516,7 @@
 	}
 	else if (act->getKind() == actionURI)
 	{
-		auto *gto = (LinkURI*) act;
+		const auto *gto = (LinkURI*) act;
 		validLink = true;
 		fileName = UnicodeParsedString(gto->getURI());
 	}
@@ -623,7 +589,7 @@
 		int wtyp = -1;
 		if (fm->getType() == formButton)
 		{
-			auto *btn = (FormWidgetButton*) fm;
+			const auto *btn = (FormWidgetButton*) fm;
 			if (btn)
 			{
 				if (btn->getButtonType() == formButtonCheck)
@@ -650,7 +616,7 @@
 		}
 		else if (fm->getType() == formChoice)
 		{
-			auto *btn = (FormWidgetChoice*) fm;
+			const auto *btn = (FormWidgetChoice*) fm;
 			if (btn)
 			{
 				if (btn->isCombo())
@@ -703,12 +669,8 @@
 			if (apa || !achar)
 			{
 				auto *annotOutDev = new AnoOutputDev(m_doc, m_importedColors);
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(22, 4, 0)
 				const PDFRectangle& annotaRect = annota->getRect();
 				auto* gfx = new Gfx(m_pdfDoc, annotOutDev, m_pdfDoc->getPage(m_actPage)->getResourceDict(), &annotaRect, nullptr);
-#else
-				auto* gfx = new Gfx(m_pdfDoc, annotOutDev, m_pdfDoc->getPage(m_actPage)->getResourceDict(), annota->getRect(), nullptr);
-#endif
 				ano->draw(gfx, false);
 				if (!bgFound)
 					m_graphicStack.top().fillColor = annotOutDev->currColorFill;
@@ -741,7 +703,7 @@
 			}
 			ite->setIsAnnotation(true);
 			ite->AutoName = false;
-			AnnotBorder *brd = annota->getBorder();
+			const AnnotBorder *brd = annota->getBorder();
 			if (brd)
 			{
 				int bsty = brd->getStyle();
@@ -763,7 +725,7 @@
 				ite->annotation().setBorderColor(CommonStrings::None);
 				ite->annotation().setBorderWidth(0);
 			}
-			QString tmTxt = UnicodeParsedString(fm->getPartialName());
+			QString tmTxt(UnicodeParsedString(fm->getPartialName()));
 			if (!tmTxt.isEmpty())
 				ite->setItemName(tmTxt);
 			tmTxt.clear();
@@ -796,7 +758,7 @@
 					ite->itemText.insertChars(itemText);
 				applyTextStyle(ite, fontName, currTextColor, fontSize);
 				ite->annotation().addToFlag(Annotation::Flag_PushButton);
-				auto *btn = (FormWidgetButton*) fm;
+				const auto *btn = (FormWidgetButton*) fm;
 				if (!btn->isReadOnly())
 					ite->annotation().addToFlag(Annotation::Flag_Edit);
 				handleActions(ite, ano);
@@ -831,7 +793,7 @@
 			}
 			else if (wtyp == Annotation::Checkbox)
 			{
-				auto *btn = (FormWidgetButton*) fm;
+				const auto *btn = (FormWidgetButton*) fm;
 				if (btn)
 				{
 					ite->annotation().setIsChk(btn->getState());
@@ -857,7 +819,7 @@
 			}
 			else if ((wtyp == Annotation::Combobox) || (wtyp == Annotation::Listbox))
 			{
-				auto *btn = (FormWidgetChoice*) fm;
+				const auto *btn = (FormWidgetChoice*) fm;
 				if (btn)
 				{
 					if (wtyp == 5)
@@ -880,7 +842,7 @@
 			}
 			else if (wtyp == Annotation::RadioButton)
 			{
-				auto *btn = (FormWidgetButton*) fm;
+				const auto *btn = (FormWidgetButton*) fm;
 				if (btn)
 				{
 					ite->setItemName( CommonStrings::itemName_RadioButton + QString("%1").arg(m_doc->TotalItems));
@@ -900,7 +862,7 @@
 		obj1 = m_xref->fetch(refa.num, refa.gen);
 		if (obj1.isDict())
 		{
-			Dict* dict = obj1.getDict();
+			const Dict* dict = obj1.getDict();
 			Object obj2 = dict->lookup("Kids");
 			//childs
 			if (obj2.isArray())
@@ -909,7 +871,7 @@
 				QList<int> radList;
 				for (int i = 0; i < obj2.arrayGetLength(); i++)
 				{
-					const Object& childRef = obj2.arrayGetNF(i);
+					const Object & childRef = obj2.arrayGetNF(i);
 					if (!childRef.isRef())
 						continue;
 					Object childObj = obj2.arrayGet(i);
@@ -968,7 +930,7 @@
 	{
 		if (Lact->getKind() == actionJavaScript)
 		{
-			auto *jsa = (LinkJavaScript*) Lact;
+			const auto *jsa = (LinkJavaScript*) Lact;
 			if (jsa->isOk())
 			{
 				ite->annotation().setActionType(1);
@@ -980,7 +942,7 @@
 			int pagNum = 0;
 			int xco = 0;
 			int yco = 0;
-			auto *gto = (LinkGoTo*) Lact;
+			const auto *gto = (LinkGoTo*) Lact;
 			const LinkDest *dst = gto->getDest();
 			if (dst)
 			{
@@ -989,11 +951,7 @@
 					if (dst->isPageRef())
 					{
 						Ref dstr = dst->getPageRef();
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(0, 76, 0)
 						pagNum = m_pdfDoc->findPage(dstr);
-#else
-						pagNum = m_pdfDoc->findPage(dstr.num, dstr.gen);
-#endif
 					}
 					else
 						pagNum = dst->getPageNum();
@@ -1009,21 +967,13 @@
 				const GooString *ndst = gto->getNamedDest();
 				if (ndst)
 				{
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(0, 86, 0)
 					std::unique_ptr<LinkDest> dstn = m_pdfDoc->findDest(ndst);
-#else
-					LinkDest *dstn = m_pdfDoc->findDest(ndst);
-#endif
 					if (dstn && (dstn->getKind() == destXYZ))
 					{
 						if (dstn->isPageRef())
 						{
 							Ref dstr = dstn->getPageRef();
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(0, 76, 0)
 							pagNum = m_pdfDoc->findPage(dstr);
-#else
-							pagNum = m_pdfDoc->findPage(dstr.num, dstr.gen);
-#endif
 						}
 						else
 							pagNum = dstn->getPageNum();
@@ -1041,7 +991,7 @@
 			int pagNum = 0;
 			int xco = 0;
 			int yco = 0;
-			auto *gto = (LinkGoToR*) Lact;
+			const auto *gto = (LinkGoToR*) Lact;
 			QString fileName = UnicodeParsedString(gto->getFileName());
 			const LinkDest *dst = gto->getDest();
 			if (dst)
@@ -1062,11 +1012,7 @@
 				const GooString *ndst = gto->getNamedDest();
 				if (ndst)
 				{
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(0, 86, 0)
 					std::unique_ptr<LinkDest> dstn = m_pdfDoc->findDest(ndst);
-#else
-					LinkDest *dstn = m_pdfDoc->findDest(ndst);
-#endif
 					if (dstn && (dstn->getKind() == destXYZ))
 					{
 						pagNum = dstn->getPageNum();
@@ -1080,12 +1026,10 @@
 				}
 			}
 		}
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(0, 89, 0)
 		else if (Lact->getKind() == actionResetForm)
 		{
 			ite->annotation().setActionType(4);
 		}
-#endif
 #if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(24, 10, 0)
 		else if (Lact->getKind() == actionSubmitForm)
 		{
@@ -1108,7 +1052,7 @@
 #endif
 		else if (Lact->getKind() == actionUnknown)
 		{
-			auto *uno = (LinkUnknown*) Lact;
+			const auto *uno = (LinkUnknown*) Lact;
 			QString actString = UnicodeParsedString(uno->getAction());
 			if (actString == "ResetForm")
 			{
@@ -1151,7 +1095,7 @@
 		}
 		else if (Lact->getKind() == actionNamed)
 		{
-			auto *uno = (LinkNamed*) Lact;
+			const auto *uno = (LinkNamed*) Lact;
 			ite->annotation().setActionType(10);
 			ite->annotation().setAction(UnicodeParsedString(uno->getName()));
 		}
@@ -1163,143 +1107,91 @@
 	{
 		if (Aact->getKind() == actionJavaScript)
 		{
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(0, 86, 0)
-			auto *jsa = (LinkJavaScript*) Aact.get();
-#else
-			auto *jsa = (LinkJavaScript*) Aact;
-#endif
+			const auto *jsa = (LinkJavaScript*) Aact.get();
 			if (jsa->isOk())
 			{
 				ite->annotation().setD_act(UnicodeParsedString(jsa->getScript()));
 				ite->annotation().setAAact(true);
 			}
 		}
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(0, 86, 0)
 		Aact.reset();
-#else
-		Aact = nullptr;
-#endif
 	}
 	Aact = SC_getAdditionalAction("E", ano);
 	if (Aact)
 	{
 		if (Aact->getKind() == actionJavaScript)
 		{
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(0, 86, 0)
-			auto *jsa = (LinkJavaScript*) Aact.get();
-#else
-			auto *jsa = (LinkJavaScript*) Aact;
-#endif
+			const auto *jsa = (LinkJavaScript*) Aact.get();
 			if (jsa->isOk())
 			{
 				ite->annotation().setE_act(UnicodeParsedString(jsa->getScript()));
 				ite->annotation().setAAact(true);
 			}
 		}
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(0, 86, 0)
 		Aact.reset();
-#else
-		Aact = nullptr;
-#endif
 	}
 	Aact = SC_getAdditionalAction("X", ano);
 	if (Aact)
 	{
 		if (Aact->getKind() == actionJavaScript)
 		{
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(0, 86, 0)
-			auto *jsa = (LinkJavaScript*) Aact.get();
-#else
-			auto *jsa = (LinkJavaScript*) Aact;
-#endif
+			const auto *jsa = (LinkJavaScript*) Aact.get();
 			if (jsa->isOk())
 			{
 				ite->annotation().setX_act(UnicodeParsedString(jsa->getScript()));
 				ite->annotation().setAAact(true);
 			}
 		}
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(0, 86, 0)
 		Aact.reset();
-#else
-		Aact = nullptr;
-#endif
 	}
 	Aact = SC_getAdditionalAction("Fo", ano);
 	if (Aact)
 	{
 		if (Aact->getKind() == actionJavaScript)
 		{
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(0, 86, 0)
-			auto *jsa = (LinkJavaScript*) Aact.get();
-#else
-			auto *jsa = (LinkJavaScript*) Aact;
-#endif
+			const auto *jsa = (LinkJavaScript*) Aact.get();
 			if (jsa->isOk())
 			{
 				ite->annotation().setFo_act(UnicodeParsedString(jsa->getScript()));
 				ite->annotation().setAAact(true);
 			}
 		}
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(0, 86, 0)
 		Aact.reset();
-#else
-		Aact = nullptr;
-#endif
 	}
 	Aact = SC_getAdditionalAction("Bl", ano);
 	if (Aact)
 	{
 		if (Aact->getKind() == actionJavaScript)
 		{
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(0, 86, 0)
-			auto *jsa = (LinkJavaScript*) Aact.get();
-#else
-			auto *jsa = (LinkJavaScript*) Aact;
-#endif
+			const auto *jsa = (LinkJavaScript*) Aact.get();
 			if (jsa->isOk())
 			{
 				ite->annotation().setBl_act(UnicodeParsedString(jsa->getScript()));
 				ite->annotation().setAAact(true);
 			}
 		}
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(0, 86, 0)
 		Aact.reset();
-#else
-		Aact = nullptr;
-#endif
 	}
 	Aact = SC_getAdditionalAction("C", ano);
 	if (Aact)
 	{
 		if (Aact->getKind() == actionJavaScript)
 		{
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(0, 86, 0)
-			auto *jsa = (LinkJavaScript*) Aact.get();
-#else
-			auto *jsa = (LinkJavaScript*) Aact;
-#endif
+			const auto *jsa = (LinkJavaScript*) Aact.get();
 			if (jsa->isOk())
 			{
 				ite->annotation().setC_act(UnicodeParsedString(jsa->getScript()));
 				ite->annotation().setAAact(true);
 			}
 		}
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(0, 86, 0)
 		Aact.reset();
-#else
-		Aact = nullptr;
-#endif
 	}
 	Aact = SC_getAdditionalAction("F", ano);
 	if (Aact)
 	{
 		if (Aact->getKind() == actionJavaScript)
 		{
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(0, 86, 0)
-			auto *jsa = (LinkJavaScript*) Aact.get();
-#else
-			autoz*jsa = (LinkJavaScript*) Aact;
-#endif
+			const auto *jsa = (LinkJavaScript*) Aact.get();
 			if (jsa->isOk())
 			{
 				ite->annotation().setF_act(UnicodeParsedString(jsa->getScript()));
@@ -1307,22 +1199,14 @@
 				ite->annotation().setFormat(5);
 			}
 		}
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(0, 86, 0)
 		Aact.reset();
-#else
-		Aact = nullptr;
-#endif
 	}
 	Aact = SC_getAdditionalAction("K", ano);
 	if (Aact)
 	{
 		if (Aact->getKind() == actionJavaScript)
 		{
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(0, 86, 0)
-			auto *jsa = (LinkJavaScript*) Aact.get();
-#else
-			auto *jsa = (LinkJavaScript*) Aact;
-#endif
+			const auto *jsa = (LinkJavaScript*) Aact.get();
 			if (jsa->isOk())
 			{
 				ite->annotation().setK_act(UnicodeParsedString(jsa->getScript()));
@@ -1330,33 +1214,21 @@
 				ite->annotation().setFormat(5);
 			}
 		}
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(0, 86, 0)
 		Aact.reset();
-#else
-		Aact = nullptr;
-#endif
 	}
 	Aact = SC_getAdditionalAction("V", ano);
 	if (Aact)
 	{
 		if (Aact->getKind() == actionJavaScript)
 		{
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(0, 86, 0)
-			auto *jsa = (LinkJavaScript*) Aact.get();
-#else
-			auto *jsa = (LinkJavaScript*) Aact;
-#endif
+			const auto *jsa = (LinkJavaScript*) Aact.get();
 			if (jsa->isOk())
 			{
 				ite->annotation().setV_act(UnicodeParsedString(jsa->getScript()));
 				ite->annotation().setAAact(true);
 			}
 		}
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(0, 86, 0)
 		Aact.reset();
-#else
-		Aact = nullptr;
-#endif
 	}
 }
 
@@ -1366,11 +1238,7 @@
 	m_catalog = catA;
 	m_pdfDoc = doc;
 	m_updateGUICounter = 0;
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(0, 84, 0)
 	m_fontEngine = new SplashFontEngine(true, false, false, true);
-#else
-	m_fontEngine = new SplashFontEngine(globalParams->getEnableFreeType(), false, false, true);
-#endif
 }
 
 void SlaOutputDev::startPage(int pageNum, GfxState *, XRef *)
@@ -1685,7 +1553,7 @@
 
 	auto& graphicState = m_graphicStack.top();
 	graphicState.strokeColor = getColor(state->getStrokeColorSpace(), state->getStrokeColor(), &graphicState.strokeShade);
-	
+
 	QString output = convertPath(state->getPath());
 	if ((m_Elements->count() != 0) && (output == m_coords))			// Path is the same as in last fill
 	{
@@ -1860,7 +1728,7 @@
 	if (func->getType() == 3)
 #endif
 	{
-		auto *stitchingFunc = (StitchingFunction*) func;
+		const auto *stitchingFunc = (const StitchingFunction*) func;
 		const double *bounds = stitchingFunc->getBounds();
 		int num_funcs = stitchingFunc->getNumFuncs();
 		double domain_min = stitchingFunc->getDomainMin(0);
@@ -2002,7 +1870,7 @@
 	if (func->getType() == 3)
 #endif
 	{
-		auto *stitchingFunc = (StitchingFunction*) func;
+		const auto *stitchingFunc = (const StitchingFunction*) func;
 		const double *bounds = stitchingFunc->getBounds();
 		int num_funcs = stitchingFunc->getNumFuncs();
 		double domain_min = stitchingFunc->getDomainMin(0);
@@ -2347,18 +2215,12 @@
 	return true;
 }
 
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(21, 3, 0)
 bool SlaOutputDev::tilingPatternFill(GfxState *state, Gfx * /*gfx*/, Catalog *cat, GfxTilingPattern *tPat, const double *mat, int x0, int y0, int x1, int y1, double xStep, double yStep)
-#else
-bool SlaOutputDev::tilingPatternFill(GfxState *state, Gfx * /*gfx*/, Catalog *cat, Object *str, const double *pmat, int /*paintType*/, int /*tilingType*/, Dict *resDict, const double *mat, const double *bbox, int x0, int y0, int x1, int y1, double xStep, double yStep)
-#endif
 {
 //	qDebug() << "SlaOutputDev::tilingPatternFill";
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(21, 3, 0)
 	const double *bbox = tPat->getBBox();
 	const double *pmat = tPat->getMatrix();
 	Dict *resDict = tPat->getResDict();
-#endif
 
 	PDFRectangle box;
 	Gfx *gfx;
@@ -2386,15 +2248,12 @@
 	// Unset the clip path as it is unrelated to the pattern's coordinate space.
 	QPainterPath savedClip = m_graphicStack.top().clipPath;
 	m_graphicStack.top().clipPath = QPainterPath();
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(21, 3, 0)
 	gfx->display(tPat->getContentStream());
-#else
-	gfx->display(str);
-#endif
 	m_graphicStack.top().clipPath = savedClip;
 	m_inPattern--;
-	gElements = m_groupStack.pop();
 	m_doc->m_Selection->clear();
+
+	gElements = m_groupStack.pop();
 	if (gElements.Items.count() > 0)
 	{
 		for (int dre = 0; dre < gElements.Items.count(); ++dre)
@@ -2487,7 +2346,7 @@
 void SlaOutputDev::drawImageMask(GfxState *state, Object *ref, Stream *str, int width, int height, bool invert, bool interpolate, bool inlineImg)
 {
 //	qDebug() << "Draw Image Mask";
-	auto imgStr = std::make_shared<ImageStream>(str, width, 1, 1);
+	auto imgStr = std::make_unique<ImageStream>(str, width, 1, 1);
 	imgStr->reset();
 #ifdef WORDS_BIGENDIAN
 	QImage image(width, height, QImage::Format_Mono);
@@ -2500,7 +2359,7 @@
 	int invertBit = invert ? 1 : 0;
 	unsigned char* buffer = image.bits();
 	unsigned char* dest = nullptr;
-	int rowStride = image.bytesPerLine();
+	qsizetype rowStride = image.bytesPerLine();
 	int i, bit;
 	unsigned char* pix;
 
@@ -2561,7 +2420,7 @@
 				   GfxImageColorMap *maskColorMap, bool maskInterpolate)
 {
 //	qDebug() << "SlaOutputDev::drawSoftMaskedImage Masked Image Components" << colorMap->getNumPixelComps();
-	auto imgStr = std::make_shared<ImageStream>(str, width, colorMap->getNumPixelComps(), colorMap->getBits());
+	auto imgStr = std::make_unique<ImageStream>(str, width, colorMap->getNumPixelComps(), colorMap->getBits());
 	imgStr->reset();
 	unsigned int *dest = nullptr;
 	unsigned char * buffer = new unsigned char[width * height * 4];
@@ -2579,7 +2438,7 @@
 		return;
 	}
 
-	auto mskStr = std::make_shared<ImageStream>(maskStr, maskWidth, maskColorMap->getNumPixelComps(), maskColorMap->getBits());
+	auto mskStr = std::make_unique<ImageStream>(maskStr, maskWidth, maskColorMap->getNumPixelComps(), maskColorMap->getBits());
 	mskStr->reset();
 	unsigned char *mdest = nullptr;
 	unsigned char * mbuffer = new unsigned char[maskWidth * maskHeight];
@@ -2637,7 +2496,7 @@
 void SlaOutputDev::drawMaskedImage(GfxState *state, Object *ref, Stream *str,  int width, int height, GfxImageColorMap *colorMap, bool interpolate, Stream *maskStr, int maskWidth, int maskHeight, bool maskInvert, bool maskInterpolate)
 {
 //	qDebug() << "SlaOutputDev::drawMaskedImage";
-	auto imgStr = std::make_shared<ImageStream>(str, width, colorMap->getNumPixelComps(), colorMap->getBits());
+	auto imgStr = std::make_unique<ImageStream>(str, width, colorMap->getNumPixelComps(), colorMap->getBits());
 	imgStr->reset();
 	unsigned int *dest = nullptr;
 	unsigned char * buffer = new unsigned char[width * height * 4];
@@ -2655,7 +2514,7 @@
 		return;
 	}
 
-	auto mskStr = std::make_shared<ImageStream>(maskStr, maskWidth, 1, 1);
+	auto mskStr = std::make_unique<ImageStream>(maskStr, maskWidth, 1, 1);
 	mskStr->reset();
 	unsigned char *mdest = nullptr;
 	int invert_bit = maskInvert ? 1 : 0;
@@ -2693,15 +2552,15 @@
 		}
 	}
 
-	createImageFrame(res, state, colorMap->getNumPixelComps());
+	createImageFrame(res, state, 3);
 
 	delete[] buffer;
 	delete[] mbuffer;
 }
 
-void SlaOutputDev::drawImage(GfxState *state, Object *ref, Stream *str, int width, int height, GfxImageColorMap *colorMap, bool interpolate, POPPLER_CONST_082 int* maskColors, bool inlineImg)
+void SlaOutputDev::drawImage(GfxState *state, Object *ref, Stream *str, int width, int height, GfxImageColorMap *colorMap, bool interpolate, const int* maskColors, bool inlineImg)
 {
-	auto imgStr = std::make_shared<ImageStream>(str, width, colorMap->getNumPixelComps(), colorMap->getBits());
+	auto imgStr = std::make_unique<ImageStream>(str, width, colorMap->getNumPixelComps(), colorMap->getBits());
 	imgStr->reset();
 
 	QImage image(width, height, QImage::Format_ARGB32);
@@ -2932,7 +2791,7 @@
 	{
 		if (dictRef->isNull())
 			return;
-		OCGs *contentConfig = m_catalog->getOptContentConfig();
+		POPPLER_CONST_25_02 OCGs *contentConfig = m_catalog->getOptContentConfig();
 		OptionalContentGroup *oc;
 		if (dictRef->isRef())
 		{
@@ -2949,14 +2808,14 @@
 			Object dictObj = dictRef->fetch(m_xref);
 			if (!dictObj.isDict())
 				return;
-			Dict* dict = dictObj.getDict();
+			const Dict* dict = dictObj.getDict();
 			Object dictType = dict->lookup("Type");
 			if (dictType.isName("OCG"))
 			{
 				oc = contentConfig->findOcgByRef(dictRef->getRef());
 				if (oc)
 				{
-					//					qDebug() << "Begin OCG Content with Name " << UnicodeParsedString(oc->getName());
+//					qDebug() << "Begin OCG Content with Name " << UnicodeParsedString(oc->getName());
 					m_doc->setActiveLayer(UnicodeParsedString(oc->getName()));
 					mSte.ocgName = UnicodeParsedString(oc->getName());
 				}
@@ -3056,22 +2915,10 @@
 
 void SlaOutputDev::updateFont(GfxState *state)
 {
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(22, 4, 0)
 	std::optional<GfxFontLoc> fontLoc;
 	std::string fileName;
 	std::unique_ptr<FoFiTrueType> ff;
 	std::optional<std::vector<unsigned char>> tmpBuf;
-#elif POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(22, 2, 0)
-	std::optional<GfxFontLoc> fontLoc;
-	const GooString * fileName = nullptr;
-	std::unique_ptr<FoFiTrueType> ff;
-	char* tmpBuf = nullptr;
-#else
-	GfxFontLoc * fontLoc = nullptr;
-	GooString * fileName = nullptr;
-	FoFiTrueType * ff = nullptr;
-	char* tmpBuf = nullptr;
-#endif
 	GfxFontType fontType;
 #if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(24, 11, 0)
 	std::unique_ptr<SlaOutFontFileID> id;
@@ -3081,10 +2928,11 @@
 	SplashFontFile *fontFile;
 	SplashFontSrc *fontsrc = nullptr;
 	Object refObj, strObj;
-#if POPPLER_ENCODED_VERSION < POPPLER_VERSION_ENCODE(22, 4, 0)
-	int tmpBufLen = 0;
-#endif
+#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(25, 2, 0)
+	std::vector<int> codeToGID;
+#else
 	int *codeToGID = nullptr;
+#endif
 	const double *textMat = nullptr;
 	double m11, m12, m21, m22, fontSize;
 	SplashCoord mat[4] = { 1.0, 0.0, 0.0, 1.0 };
@@ -3094,11 +2942,7 @@
 
 	m_font = nullptr;
 
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(22, 4, 0)
 	GfxFont* gfxFont = state->getFont().get();
-#else
-	GfxFont* gfxFont = state->getFont();
-#endif
 	if (!gfxFont)
 		goto err1;
 
@@ -3108,7 +2952,7 @@
 
 	// check the font file cache
 #if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(24, 11, 0)
-	id.reset(new SlaOutFontFileID(gfxFont->getID()));
+	id = std::make_unique<SlaOutFontFileID>(gfxFont->getID());
 	if ((fontFile = m_fontEngine->getFontFile(*id)))
 		id.reset();
 #else
@@ -3129,42 +2973,23 @@
 		if (fontLoc->locType == gfxFontLocEmbedded)
 		{
 			// if there is an embedded font, read it to memory
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(22, 4, 0)
 			tmpBuf = gfxFont->readEmbFontFile(m_xref ? m_xref : m_pdfDoc->getXRef());
 			if (! tmpBuf)
 				goto err2;
-#else
-			tmpBuf = gfxFont->readEmbFontFile(m_xref, &tmpBufLen);
-			if (!tmpBuf)
-				goto err2;
-#endif
 
 			// external font
 		}
 		else
 		{ // gfxFontLocExternal
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(22, 4, 0)
-			fileName = fontLoc->path;
-#elif POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(22, 2, 0)
-			fileName = fontLoc->pathAsGooString();
-#else
 			fileName = fontLoc->path;
-#endif
 			fontType = fontLoc->fontType;
 		}
 
 		fontsrc = new SplashFontSrc;
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(22, 4, 0)
 		if (!fileName.empty())
 			fontsrc->setFile(fileName);
 		else
 			fontsrc->setBuf(std::move(tmpBuf.value()));
-#else
-		if (fileName)
-			fontsrc->setFile(fileName, false);
-		else
-			fontsrc->setBuf(tmpBuf, tmpBufLen, true);
-#endif
 
 		// load the font file
 		switch (fontType) {
@@ -3220,34 +3045,34 @@
 				ff = FoFiTrueType::load(fileName.c_str(), fontLoc->fontNum);
 			else
 				ff = FoFiTrueType::make(fontsrc->buf.data(), fontsrc->buf.size(), fontLoc->fontNum);
-#elif POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(22, 4, 0)
+#else
 			if (!fileName.empty())
 				ff = FoFiTrueType::load(fileName.c_str());
 			else
 				ff = FoFiTrueType::make(fontsrc->buf.data(), fontsrc->buf.size());
-#else
-			if (fileName)
-				ff = FoFiTrueType::load(fileName->c_str());
-			else
-				ff = FoFiTrueType::make(tmpBuf, tmpBufLen);
 #endif
 			if (ff)
 			{
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(22, 2, 0)
 				codeToGID = ((Gfx8BitFont*) gfxFont)->getCodeToGIDMap(ff.get());
 				ff.reset();
-#else
-				codeToGID = ((Gfx8BitFont *)gfxFont)->getCodeToGIDMap(ff);
-				delete ff;
-#endif
 				n = 256;
 			}
 			else
 			{
+#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(25, 2, 0)
+				codeToGID.clear();
+#else
 				codeToGID = nullptr;
+#endif
 				n = 0;
 			}
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(24, 11, 0)
+#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(25, 2, 0)
+			if (!(fontFile = m_fontEngine->loadTrueTypeFont(std::move(id), fontsrc, std::move(codeToGID), fontLoc->fontNum)))
+			{
+				error(errSyntaxError, -1, "Couldn't create a font for '{0:s}'", gfxFont->getName() ? gfxFont->getName()->c_str() : "(unnamed)");
+				goto err2;
+			}
+#elif POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(24, 11, 0)
 			if (!(fontFile = m_fontEngine->loadTrueTypeFont(std::move(id), fontsrc, codeToGID, n, fontLoc->fontNum)))
 			{
 				error(errSyntaxError, -1, "Couldn't create a font for '{0:s}'", gfxFont->getName() ? gfxFont->getName()->c_str() : "(unnamed)");
@@ -3278,6 +3103,18 @@
 #endif
 			break;
 		case fontCIDType0COT:
+#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(25, 2, 0)
+			if (((GfxCIDFont*) gfxFont)->getCIDToGIDLen() > 0)
+			{
+				codeToGID = ((GfxCIDFont*) gfxFont)->getCIDToGID();
+				n = codeToGID.size();
+			}
+			else
+			{
+				codeToGID.clear();
+				n = 0;
+			}
+#else
 			if (((GfxCIDFont *) gfxFont)->getCIDToGID())
 			{
 				n = ((GfxCIDFont *) gfxFont)->getCIDToGIDLen();
@@ -3289,7 +3126,15 @@
 				codeToGID = nullptr;
 				n = 0;
 			}
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(24, 11, 0)
+#endif
+#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(25, 2, 0)
+			if (!(fontFile = m_fontEngine->loadOpenTypeCFFFont(std::move(id), fontsrc, std::move(codeToGID), fontLoc->fontNum)))
+			{
+				error(errSyntaxError, -1, "Couldn't create a font for '{0:s}'",
+					gfxFont->getName() ? gfxFont->getName()->c_str() : "(unnamed)");
+				goto err2;
+			}
+#elif POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(24, 11, 0)
 			if (!(fontFile = m_fontEngine->loadOpenTypeCFFFont(std::move(id), fontsrc, codeToGID, n, fontLoc->fontNum)))
 			{
 				error(errSyntaxError, -1, "Couldn't create a font for '{0:s}'",
@@ -3307,6 +3152,15 @@
 			break;
 		case fontCIDType2:
 		case fontCIDType2OT:
+#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(25, 2, 0)
+			codeToGID.clear();
+			n = 0;
+			if (((GfxCIDFont*) gfxFont)->getCIDToGIDLen() > 0)
+			{
+				codeToGID = ((GfxCIDFont*) gfxFont)->getCIDToGID();
+				n = codeToGID.size();
+			}
+#else
 			codeToGID = nullptr;
 			n = 0;
 			if (((GfxCIDFont *) gfxFont)->getCIDToGID())
@@ -3318,6 +3172,7 @@
 					memcpy(codeToGID, ((GfxCIDFont *)gfxFont)->getCIDToGID(), n * sizeof(*codeToGID));
 				}
 			}
+#endif
 			else
 			{
 #if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(24, 11, 0)
@@ -3325,28 +3180,28 @@
 					ff = FoFiTrueType::load(fileName.c_str(), fontLoc->fontNum);
 				else
 					ff = FoFiTrueType::make(fontsrc->buf.data(), fontsrc->buf.size(), fontLoc->fontNum);
-#elif POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(22, 4, 0)
+#else
 				if (!fileName.empty())
 					ff = FoFiTrueType::load(fileName.c_str());
 				else
 					ff = FoFiTrueType::make(fontsrc->buf.data(), fontsrc->buf.size());
-#else
-				if (fileName)
-					ff = FoFiTrueType::load(fileName->c_str());
-				else
-					ff = FoFiTrueType::make(tmpBuf, tmpBufLen);
 #endif
 				if (! ff)
 					goto err2;
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(22, 2, 0)
-				codeToGID = ((GfxCIDFont*) gfxFont)->getCodeToGIDMap(ff.get(), &n);
-				ff.reset();
+#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(25, 2, 0)
+				codeToGID = ((GfxCIDFont*) gfxFont)->getCodeToGIDMap(ff.get());
 #else
-				codeToGID = ((GfxCIDFont *)gfxFont)->getCodeToGIDMap(ff, &n);
-				delete ff;
+				codeToGID = ((GfxCIDFont*) gfxFont)->getCodeToGIDMap(ff.get(), &n);
 #endif
+				ff.reset();
 			}
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(24, 11, 0)
+#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(25, 2, 0)
+			if (!(fontFile = m_fontEngine->loadTrueTypeFont(std::move(id), fontsrc, std::move(codeToGID), fontLoc->fontNum)))
+			{
+				error(errSyntaxError, -1, "Couldn't create a font for '{0:s}'", gfxFont->getName() ? gfxFont->getName()->c_str() : "(unnamed)");
+				goto err2;
+			}
+#elif POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(24, 11, 0)
 			if (!(fontFile = m_fontEngine->loadTrueTypeFont(std::move(id), fontsrc, codeToGID, n, fontLoc->fontNum)))
 			{
 				error(errSyntaxError, -1, "Couldn't create a font for '{0:s}'", gfxFont->getName() ? gfxFont->getName()->c_str() : "(unnamed)");
@@ -3385,9 +3240,6 @@
 	mat[3] = -m22;
 	m_font = m_fontEngine->getFont(fontFile, mat, matrix);
 
-#if POPPLER_ENCODED_VERSION < POPPLER_VERSION_ENCODE(22, 2, 0)
-	delete fontLoc;
-#endif
 	if (fontsrc && !fontsrc->isFile)
 		fontsrc->unref();
 	return;
@@ -3398,16 +3250,13 @@
 #else
 	delete id;
 #endif
-#if POPPLER_ENCODED_VERSION < POPPLER_VERSION_ENCODE(22, 2, 0)
-	delete fontLoc;
-#endif
 
 err1:
 	if (fontsrc && !fontsrc->isFile)
 		fontsrc->unref();
 }
 
-void SlaOutputDev::drawChar(GfxState* state, double x, double y, double dx, double dy, double originX, double originY, CharCode code, int nBytes, POPPLER_CONST_082 Unicode* u, int uLen)
+void SlaOutputDev::drawChar(GfxState* state, double x, double y, double dx, double dy, double originX, double originY, CharCode code, int nBytes, const Unicode* u, int uLen)
 {
 //	qDebug() << "SlaOutputDev::drawChar code:" << code << "bytes:" << nBytes << "Unicode:" << u << "ulen:" << uLen << "render:" << state->getRender();
 	double x1, y1, x2, y2;
@@ -3501,18 +3350,12 @@
 }
 
 
-bool SlaOutputDev::beginType3Char(GfxState *state, double x, double y, double dx, double dy, CharCode code, POPPLER_CONST_082 Unicode *u, int uLen)
+bool SlaOutputDev::beginType3Char(GfxState *state, double x, double y, double dx, double dy, CharCode code, const Unicode *u, int uLen)
 {
 //	qDebug() << "beginType3Char";
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(22, 4, 0)
 	GfxFont *gfxFont;
 	if (!(gfxFont = state->getFont().get()))
 		return true;
-#else
-	GfxFont* gfxFont;
-	if (!(gfxFont = state->getFont()))
-		return true;
-#endif
 	if (gfxFont->getType() != fontType3)
 		return true;
 	F3Entry f3e;
@@ -3766,7 +3609,7 @@
 	return fNam;
 }
 
-QString SlaOutputDev::convertPath(POPPLER_CONST_083 GfxPath *path)
+QString SlaOutputDev::convertPath(const GfxPath *path)
 {
 //	qDebug() << "SlaOutputDev::convertPath";
 	if (! path)
@@ -3777,7 +3620,7 @@
 
 	for (int i = 0; i < path->getNumSubpaths(); ++i)
 	{
-		POPPLER_CONST_083 GfxSubpath * subpath = path->getSubpath(i);
+		const GfxSubpath * subpath = path->getSubpath(i);
 		if (subpath->getNumPoints() > 0)
 		{
 			output += QString("M %1 %2").arg(subpath->getX(0)).arg(subpath->getY(0));
@@ -3841,7 +3684,7 @@
 		pattern[i] = dashPattern[i];
 	m_dashValues = pattern;
 #else
-	double *dashPattern;
+	double* dashPattern;
 	int dashLength;
 	state->getLineDash(&dashPattern, &dashLength, &m_dashOffset);
 	QVector<double> pattern(dashLength);
@@ -3959,7 +3802,7 @@
 
 QString SlaOutputDev::UnicodeParsedString(const GooString *s1) const
 {
-	if ( !s1 || s1->getLength() == 0 )
+	if (!s1 || s1->getLength() == 0)
 		return QString();
 	bool isUnicode;
 	int i;
diff -Naur a/scribus/plugins/import/pdf/slaoutput.h b/scribus/plugins/import/pdf/slaoutput.h
--- a/scribus/plugins/import/pdf/slaoutput.h	2025-01-08 00:06:55.000000000 +0100
+++ b/scribus/plugins/import/pdf/slaoutput.h	2025-02-28 12:36:04.557116699 +0100
@@ -165,11 +165,7 @@
 	~SlaOutputDev() override;
 
 	LinkAction* SC_getAction(AnnotWidget *ano);
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(0, 86, 0)
 	std::unique_ptr<LinkAction> SC_getAdditionalAction(const char *key, AnnotWidget *ano);
-#else
-	LinkAction* SC_getAdditionalAction(const char *key, AnnotWidget *ano);
-#endif
 	static bool annotations_callback(Annot *annota, void *user_data);
 	bool handleTextAnnot(Annot* annota, double xCoor, double yCoor, double width, double height);
 	bool handleLinkAnnot(Annot* annota, double xCoor, double yCoor, double width, double height);
@@ -199,11 +195,7 @@
 	void stroke(GfxState *state) override;
 	void fill(GfxState *state) override;
 	void eoFill(GfxState *state) override;
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(21, 3, 0)
 	bool tilingPatternFill(GfxState *state, Gfx *gfx, Catalog *cat, GfxTilingPattern *tPat, const double *mat, int x0, int y0, int x1, int y1, double xStep, double yStep) override;
-#else
-	bool tilingPatternFill(GfxState *state, Gfx *gfx, Catalog *cat, Object *str, const double *pmat, int paintType, int tilingType, Dict *resDict, const double *mat, const double *bbox, int x0, int y0, int x1, int y1, double xStep, double yStep) override;
-#endif
 	bool functionShadedFill(GfxState * /*state*/, GfxFunctionShading * /*shading*/) override { qDebug() << "Function Shaded Fill";  return false; }
 	bool axialShadedFill(GfxState *state, GfxAxialShading *shading, double tMin, double tMax) override;
 	bool axialShadedSupportExtend(GfxState *state, GfxAxialShading *shading)  override { return (shading->getExtend0() == shading->getExtend1()); }
@@ -243,7 +235,7 @@
 
 	//----- image drawing
 	void drawImageMask(GfxState *state, Object *ref, Stream *str, int width, int height, bool invert, bool interpolate, bool inlineImg) override;
-	void drawImage(GfxState *state, Object *ref, Stream *str, int width, int height, GfxImageColorMap *colorMap, bool interpolate, POPPLER_CONST_082 int *maskColors, bool inlineImg) override;
+	void drawImage(GfxState *state, Object *ref, Stream *str, int width, int height, GfxImageColorMap *colorMap, bool interpolate, const int *maskColors, bool inlineImg) override;
 	void drawSoftMaskedImage(GfxState *state, Object *ref, Stream *str,
 				   int width, int height,
 				   GfxImageColorMap *colorMap,
@@ -275,8 +267,8 @@
 	//----- text drawing
 	void  beginTextObject(GfxState *state) override;
 	void  endTextObject(GfxState *state) override;
-	void  drawChar(GfxState *state, double /*x*/, double /*y*/, double /*dx*/, double /*dy*/, double /*originX*/, double /*originY*/, CharCode /*code*/, int /*nBytes*/, POPPLER_CONST_082 Unicode * /*u*/, int /*uLen*/) override;
-	bool  beginType3Char(GfxState * /*state*/, double /*x*/, double /*y*/, double /*dx*/, double /*dy*/, CharCode /*code*/, POPPLER_CONST_082 Unicode * /*u*/, int /*uLen*/) override;
+	void  drawChar(GfxState *state, double /*x*/, double /*y*/, double /*dx*/, double /*dy*/, double /*originX*/, double /*originY*/, CharCode /*code*/, int /*nBytes*/, const Unicode * /*u*/, int /*uLen*/) override;
+	bool  beginType3Char(GfxState * /*state*/, double /*x*/, double /*y*/, double /*dx*/, double /*dy*/, CharCode /*code*/, const Unicode * /*u*/, int /*uLen*/) override;
 	void  endType3Char(GfxState * /*state*/) override;
 	void  type3D0(GfxState * /*state*/, double /*wx*/, double /*wy*/) override;
 	void  type3D1(GfxState * /*state*/, double /*wx*/, double /*wy*/, double /*llx*/, double /*lly*/, double /*urx*/, double /*ury*/) override;
@@ -371,7 +363,7 @@
 	void getPenState(GfxState *state);
 	QString getColor(GfxColorSpace *color_space, const GfxColor *color, int *shade);
 	QString getAnnotationColor(const AnnotColor *color);
-	QString convertPath(POPPLER_CONST_083 GfxPath *path);
+	QString convertPath(const GfxPath *path);
 	int getBlendMode(GfxState *state) const;
 	QString UnicodeParsedString(const GooString *s1) const;
 	QString UnicodeParsedString(const std::string& s1) const;
@@ -422,11 +414,7 @@
 	Catalog *m_catalog {nullptr};
 	SplashFontEngine *m_fontEngine {nullptr};
 	SplashFont *m_font {nullptr};
-#if POPPLER_ENCODED_VERSION >= POPPLER_VERSION_ENCODE(21, 4, 0)
 	std::unique_ptr<FormPageWidgets> m_formWidgets;
-#else
-	FormPageWidgets *m_formWidgets {nullptr};
-#endif
 	QHash<QString, QList<int> > m_radioMap;
 	QHash<int, PageItem*> m_radioButtons;
 	int m_actPage { 1 };
