diff -Naur a/configure b/configure
--- a/configure	2023-08-24 00:23:09.000000000 +0200
+++ b/configure	2023-09-09 17:06:57.558424448 +0200
@@ -5317,19 +5317,19 @@
 
 
 pkg_failed=no
-{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for libsoup-2.4 >= 2.65" >&5
-printf %s "checking for libsoup-2.4 >= 2.65... " >&6; }
+{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for libsoup-3.0 >= 3.0" >&5
+printf %s "checking for libsoup-3.0 >= 3.0... " >&6; }
 
 if test -n "$LIBSOUP_CFLAGS"; then
     pkg_cv_LIBSOUP_CFLAGS="$LIBSOUP_CFLAGS"
  elif test -n "$PKG_CONFIG"; then
     if test -n "$PKG_CONFIG" && \
-    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"libsoup-2.4 >= 2.65\""; } >&5
-  ($PKG_CONFIG --exists --print-errors "libsoup-2.4 >= 2.65") 2>&5
+    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"libsoup-3.0 >= 3.0\""; } >&5
+  ($PKG_CONFIG --exists --print-errors "libsoup-3.0 >= 3.0") 2>&5
   ac_status=$?
   printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
   test $ac_status = 0; }; then
-  pkg_cv_LIBSOUP_CFLAGS=`$PKG_CONFIG --cflags "libsoup-2.4 >= 2.65" 2>/dev/null`
+  pkg_cv_LIBSOUP_CFLAGS=`$PKG_CONFIG --cflags "libsoup-3.0 >= 3.0" 2>/dev/null`
 		      test "x$?" != "x0" && pkg_failed=yes
 else
   pkg_failed=yes
@@ -5341,12 +5341,12 @@
     pkg_cv_LIBSOUP_LIBS="$LIBSOUP_LIBS"
  elif test -n "$PKG_CONFIG"; then
     if test -n "$PKG_CONFIG" && \
-    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"libsoup-2.4 >= 2.65\""; } >&5
-  ($PKG_CONFIG --exists --print-errors "libsoup-2.4 >= 2.65") 2>&5
+    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"libsoup-3.0 >= 3.0\""; } >&5
+  ($PKG_CONFIG --exists --print-errors "libsoup-3.0 >= 3.0") 2>&5
   ac_status=$?
   printf "%s\n" "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
   test $ac_status = 0; }; then
-  pkg_cv_LIBSOUP_LIBS=`$PKG_CONFIG --libs "libsoup-2.4 >= 2.65" 2>/dev/null`
+  pkg_cv_LIBSOUP_LIBS=`$PKG_CONFIG --libs "libsoup-3.0 >= 3.0" 2>/dev/null`
 		      test "x$?" != "x0" && pkg_failed=yes
 else
   pkg_failed=yes
@@ -5367,14 +5367,14 @@
         _pkg_short_errors_supported=no
 fi
         if test $_pkg_short_errors_supported = yes; then
-	        LIBSOUP_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "libsoup-2.4 >= 2.65" 2>&1`
+	        LIBSOUP_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "libsoup-3.0 >= 3.0" 2>&1`
         else
-	        LIBSOUP_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "libsoup-2.4 >= 2.65" 2>&1`
+	        LIBSOUP_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "libsoup-3.0 >= 3.0" 2>&1`
         fi
 	# Put the nasty error message in config.log where it belongs
 	echo "$LIBSOUP_PKG_ERRORS" >&5
 
-	as_fn_error $? "Package requirements (libsoup-2.4 >= 2.65) were not met:
+	as_fn_error $? "Package requirements (libsoup-3.0 >= 3.0) were not met:
 
 $LIBSOUP_PKG_ERRORS
 
diff -Naur a/configure.ac b/configure.ac
--- a/configure.ac	2023-08-08 21:41:55.000000000 +0200
+++ b/configure.ac	2023-09-09 17:07:02.214436027 +0200
@@ -29,7 +29,7 @@
 AC_SUBST(DEPS_LIBS)
 AC_CHECK_LIB(m, pow)
 
-PKG_CHECK_MODULES(LIBSOUP, [libsoup-2.4 >= 2.65])
+PKG_CHECK_MODULES(LIBSOUP, [libsoup-3.0 >= 3.0])
 AC_SUBST(LIBSOUP_CFLAGS)
 AC_SUBST(LIBSOUP_LIBS)
 
diff -Naur a/src/hb-currency.c b/src/hb-currency.c
--- a/src/hb-currency.c	2023-08-13 11:28:32.000000000 +0200
+++ b/src/hb-currency.c	2023-09-09 17:59:35.085024327 +0200
@@ -753,7 +753,10 @@
 {
 SoupSession *session;
 SoupMessage *msg;
+GCancellable *cancellable;
+GBytes *body;
 gchar *query;
+guint status;
 gboolean retval = TRUE;
 
 	DB( g_printf("\n[currency] sync online\n") );
@@ -770,20 +773,20 @@
 	msg = soup_message_new ("GET", query);
 	if(msg != NULL)
 	{
-		soup_session_send_message (session, msg);
-
-		DB( g_print("status_code: %d %d\n", msg->status_code, SOUP_STATUS_IS_SUCCESSFUL(msg->status_code) ) );
+		body = soup_session_send_and_read (session, msg, cancellable, error);
+        status = soup_message_get_status (msg);
+		DB( g_print("status_code: %d %d\n", msg->status_code, SOUP_STATUS_IS_SUCCESSFUL(status) ) );
 		DB( g_print("reason: %s\n", msg->reason_phrase) );
 		DB( g_print("datas: %s\n", msg->response_body->data) );
 
-		if( SOUP_STATUS_IS_SUCCESSFUL(msg->status_code) == TRUE )
+		if( SOUP_STATUS_IS_SUCCESSFUL(status) == TRUE )
 		{
 			//#1750426 ignore the retval here (false when no rate was found, as we don't care)
-			api_fixerio_parse(msg->response_body->data, error);
+			api_fixerio_parse(body, error);
 		}
 		else
 		{
-			*error = g_error_new_literal(1, msg->status_code, msg->reason_phrase);
+			*error = g_error_new_literal(1, status, soup_message_get_reason_phrase(msg) );
 			retval = FALSE;
 		}
 
